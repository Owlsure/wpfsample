<UserControl
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:cmd="clr-namespace:Owlsure.PresentationUtility.Commands;assembly=Owlsure.PresentationUtility"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:ei="http://schemas.microsoft.com/expression/2010/interactions"
        xmlns:ee="http://schemas.microsoft.com/expression/2010/effects"
        xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
        x:Class="Owlsure.UI.WpfCounterparty.Views.CounterpartyView"
        >
    <UserControl.Resources>
        <Style TargetType="{x:Type Label}">
			<Setter Property="HorizontalContentAlignment" Value="Stretch" />
			<Setter Property="HorizontalAlignment" Value="Stretch"/>
			<Setter Property="ContentTemplate">
                <Setter.Value>
                    <DataTemplate>
                        <Border
                            Background="White" CornerRadius="4" Padding="4">
                            <TextBlock Text="{Binding Content, RelativeSource={RelativeSource Mode=TemplatedParent}}" />
                        </Border>
                    </DataTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="{x:Type TextBlock}">
            <Setter Property="Padding" Value="4" />
            <Setter Property="HorizontalAlignment" Value="Stretch" />
        </Style>
        <Storyboard x:Key="OnLoaded1">
        	<DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Height)" Storyboard.TargetName="grid1">
        		<EasingDoubleKeyFrame KeyTime="0" Value="0"/>
        	</DoubleAnimationUsingKeyFrames>
        </Storyboard>
    </UserControl.Resources>
	<UserControl.Triggers>
		<EventTrigger RoutedEvent="FrameworkElement.Loaded">
			<BeginStoryboard Storyboard="{StaticResource OnLoaded1}"/>
		</EventTrigger>
	</UserControl.Triggers>
    <Grid VerticalAlignment="Top" HorizontalAlignment="Stretch">
    	<Grid.RowDefinitions>
    		<RowDefinition/>
    		<RowDefinition/>
    	</Grid.RowDefinitions>
        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup x:Name="VisualStateGroup">
                <VisualStateGroup.Transitions>
                    <VisualTransition GeneratedDuration="0:0:1" To="VisualStateEditing">
                		<ei:ExtendedVisualStateManager.TransitionEffect>
                			<ee:WaveTransitionEffect/>
                		</ei:ExtendedVisualStateManager.TransitionEffect>
                	</VisualTransition>
                    <VisualTransition GeneratedDuration="0" To="VisualStateNormal" ei:ExtendedVisualStateManager.TransitionEffect="{x:Null}"/>
                </VisualStateGroup.Transitions>
                <VisualState x:Name="VisualStateNormal">
                    <Storyboard x:Name="Default">
                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Height)" Storyboard.TargetName="grid">
                            <EasingDoubleKeyFrame KeyTime="0" Value="150"/>
                        </DoubleAnimationUsingKeyFrames>
                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Height)" Storyboard.TargetName="grid1">
                        	<EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                        </DoubleAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="textBox">
                        	<DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Collapsed}"/>
                        </ObjectAnimationUsingKeyFrames>
                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="textBox1">
                        	<DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Collapsed}"/>
                        </ObjectAnimationUsingKeyFrames>
                    </Storyboard>
                </VisualState>
                <VisualState x:Name="VisualStateEditing">
                    <Storyboard>
                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Height)" Storyboard.TargetName="grid">
                            <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                        </DoubleAnimationUsingKeyFrames>
                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Height)" Storyboard.TargetName="grid1">
                            <EasingDoubleKeyFrame KeyTime="0" Value="150"/>
                        </DoubleAnimationUsingKeyFrames>
                    </Storyboard>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>
        <VisualStateManager.CustomVisualStateManager>
            <ei:ExtendedVisualStateManager/>
        </VisualStateManager.CustomVisualStateManager>
        <Grid x:Name="grid" Height="150" HorizontalAlignment="Stretch">
            <Grid.Background>
                <SolidColorBrush Color="White"  Opacity="0" />
            </Grid.Background>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition/>
            </Grid.RowDefinitions>

            <ComboBox HorizontalAlignment="Stretch"
                Grid.ColumnSpan="2"
                ItemsSource="{Binding Counterparties}"
                SelectedItem="{Binding SelectedCounterparty}" SelectedIndex="0" >
            	<i:Interaction.Triggers>
            		<i:EventTrigger EventName="SelectionChanged">
                        <i:InvokeCommandAction Command="{Binding SelectionChangedCommand}" 
                                               CommandParameter="{Binding SelectedItem, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ComboBox}}"/>
            		</i:EventTrigger>
            	</i:Interaction.Triggers>
                <ComboBox.ItemTemplate>
                    <DataTemplate>
                        <Border HorizontalAlignment="Stretch" Padding="2" Margin="2" BorderBrush="Blue" BorderThickness="1" CornerRadius="4">
                            <TextBlock Text="{Binding Name}" />
                        </Border>
                    </DataTemplate>
                </ComboBox.ItemTemplate>
            </ComboBox>

            <TextBlock Grid.Row="1" Grid.Column="0" Text="Code:" />
            <Label Grid.Row="1" Grid.Column="1" Content="{Binding SelectedCounterparty.Code}" />

            <TextBlock Grid.Row="2" Grid.Column="0" Text="Name:" />
            <Label Grid.Row="2" Grid.Column="1" Content="{Binding SelectedCounterparty.Name}" />
            <StackPanel Orientation="Horizontal" Grid.ColumnSpan="2" Grid.Row="3">
                <Button Content="Add" Command="{Binding AddCommand}" VerticalAlignment="Center" HorizontalAlignment="Center" >
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="Click">
                            <ei:GoToStateAction StateName="VisualStateEditing"/>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </Button>
            </StackPanel>
        </Grid>
        <Grid x:Name="grid1" Height="150" HorizontalAlignment="Stretch" Grid.Row="1">
			<Grid.Resources>
				<Style TargetType="{x:Type TextBox}">
					<Setter Property="Validation.ErrorTemplate">
						<Setter.Value>
							<ControlTemplate>
								<DockPanel>
									<Grid DockPanel.Dock="Right" Width="16" Height="16" VerticalAlignment="Center" Margin="3 0 0 0">
										<Ellipse Width="16" Height="16" Fill="Red"/>
										<Ellipse Width="3" Height="8" VerticalAlignment="Top" HorizontalAlignment="Center" Margin="0 2 0 0" Fill="White"/>
										<Ellipse Width="2" Height="2" VerticalAlignment="Bottom" HorizontalAlignment="Center" Margin="0 0 0 2" Fill="White"/>
									</Grid>
									<Border BorderBrush="Red" BorderThickness="2" CornerRadius="2">
										<AdornedElementPlaceholder/>
									</Border>
								</DockPanel>
							</ControlTemplate>
						 </Setter.Value>
					</Setter>
                    <Style.Triggers>
                        <Trigger Property="Validation.HasError" Value="true">
                            <Setter Property="ToolTip" Value="{Binding RelativeSource={x:Static RelativeSource.Self}, Path=(Validation.Errors)[0].ErrorContent}"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>
			</Grid.Resources>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition/>
                <ColumnDefinition Width="30"/> <!-- for adorner -->
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition/>
                <RowDefinition/>
                <RowDefinition/>
            </Grid.RowDefinitions>
            <Label Content="Code" />
            <TextBox x:Name="textBox" Text="{Binding NewCounterparty.Code, Mode=TwoWay, NotifyOnValidationError=True, ValidatesOnDataErrors=True}" Grid.Column="1" Margin="10" />
            <Label Content="Name" Grid.Row="1" />
            <TextBox x:Name="textBox1" Text="{Binding NewCounterparty.Name, Mode=TwoWay, NotifyOnValidationError=True, ValidatesOnDataErrors=True}" Grid.ColumnSpan="1" Grid.Row="1" Grid.Column="1" Margin="10" />
            <DockPanel Grid.Column="1" Margin="0" Grid.Row="2" HorizontalAlignment="Right" VerticalAlignment="Center">
            	<StackPanel Orientation="Horizontal" DockPanel.Dock="Right">
            		<Button x:Name="buttonCancel" 
            			Content="Cancel" HorizontalAlignment="Center" HorizontalContentAlignment="Center" 
            			IsEnabled="{Binding SelectedCounterparty.IsValid}" VerticalAlignment="Center" >
            			<i:Interaction.Triggers>
            				<i:EventTrigger EventName="Click">
            					<ei:GoToStateAction StateName="VisualStateNormal"/>
            				</i:EventTrigger>
            			</i:Interaction.Triggers>
            		</Button>
            		<Button x:Name="buttonSave" 
            			Content="Save" Command="{Binding SaveCommand}" HorizontalAlignment="Right" HorizontalContentAlignment="Left" 
            			IsEnabled="{Binding SelectedCounterparty.IsValid}" >
            			<i:Interaction.Triggers>
            				<i:EventTrigger EventName="Click">
            					<ei:GoToStateAction StateName="VisualStateNormal"/>
            				</i:EventTrigger>
            			</i:Interaction.Triggers>
            		</Button>
            	</StackPanel>
            </DockPanel>
        </Grid>
    </Grid>
</UserControl>
