<UserControl
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:cmd="clr-namespace:Owlsure.PresentationUtility.Commands;assembly=Owlsure.PresentationUtility"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:ei="http://schemas.microsoft.com/expression/2010/interactions"
        xmlns:ee="http://schemas.microsoft.com/expression/2010/effects"
        xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
        x:Class="Owlsure.UI.WpfCounterparty.Views.CounterpartyView"
        >
    <UserControl.Resources>
        <Style TargetType="{x:Type Label}">
            <Setter Property="HorizontalContentAlignment" Value="Stretch" />
            <Setter Property="ContentTemplate">
                <Setter.Value>
                    <DataTemplate>
                        <Border
                                         Background="White" CornerRadius="4" Padding="4">
                            <TextBlock Text="{Binding Content, RelativeSource={RelativeSource Mode=TemplatedParent}}" />
                        </Border>
                    </DataTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="{x:Type TextBlock}">
            <Setter Property="Padding" Value="4" />
            <Setter Property="HorizontalAlignment" Value="Stretch" />
        </Style>
    </UserControl.Resources>
    <StackPanel>
        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup x:Name="VisualStateGroup">
                <VisualStateGroup.Transitions>
                    <VisualTransition GeneratedDuration="0:0:1" To="VisualStateEditing">
                		<ei:ExtendedVisualStateManager.TransitionEffect>
                			<ee:WaveTransitionEffect/>
                		</ei:ExtendedVisualStateManager.TransitionEffect>
                	</VisualTransition>
                    <VisualTransition GeneratedDuration="0:0:1" To="VisualStateNormal">
                        <ei:ExtendedVisualStateManager.TransitionEffect>
                        	<ee:CircleRevealTransitionEffect/>
                        </ei:ExtendedVisualStateManager.TransitionEffect>
                    </VisualTransition>
                </VisualStateGroup.Transitions>
                <VisualState x:Name="VisualStateNormal">
                    <Storyboard x:Name="Default">
                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Height)" Storyboard.TargetName="grid">
                            <EasingDoubleKeyFrame KeyTime="0" Value="130"/>
                        </DoubleAnimationUsingKeyFrames>
                    </Storyboard>
                </VisualState>
                <VisualState x:Name="VisualStateEditing">
                    <Storyboard>
                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Height)" Storyboard.TargetName="grid">
                            <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                        </DoubleAnimationUsingKeyFrames>
                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Height)" Storyboard.TargetName="grid1">
                            <EasingDoubleKeyFrame KeyTime="0" Value="130"/>
                        </DoubleAnimationUsingKeyFrames>
                    </Storyboard>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>
        <VisualStateManager.CustomVisualStateManager>
            <ei:ExtendedVisualStateManager/>
        </VisualStateManager.CustomVisualStateManager>
        <Grid x:Name="grid" Height="130">
            <Grid.Background>
                <SolidColorBrush Color="White"  Opacity="0" />
            </Grid.Background>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="Auto" MinWidth="200"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition/>
            </Grid.RowDefinitions>

            <ComboBox
                Grid.ColumnSpan="2"
                ItemsSource="{Binding Counterparties}"
                SelectedItem="{Binding SelectedCounterparty}" >
            	<i:Interaction.Triggers>
            		<i:EventTrigger EventName="SelectionChanged">
                        <i:InvokeCommandAction Command="{Binding SelectionChangedCommand}" 
                                               CommandParameter="{Binding SelectedItem, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ComboBox}}"/>
            		</i:EventTrigger>
            	</i:Interaction.Triggers>
                <ComboBox.ItemTemplate>
                    <DataTemplate>
                        <Border HorizontalAlignment="Stretch" Padding="2" Margin="2" BorderBrush="Blue" BorderThickness="1" CornerRadius="4">
                            <TextBlock Text="{Binding Name}" />
                        </Border>
                    </DataTemplate>
                </ComboBox.ItemTemplate>
            </ComboBox>

            <TextBlock Grid.Row="1" Grid.Column="0" Text="Code:" />
            <Label Grid.Row="1" Grid.Column="1" Content="{Binding SelectedCounterparty.Code}" />

            <TextBlock Grid.Row="2" Grid.Column="0" Text="Name:" />
            <Label Grid.Row="2" Grid.Column="1" Content="{Binding SelectedCounterparty.Name}" />
            <StackPanel Orientation="Horizontal" Grid.ColumnSpan="2" Grid.Row="4" Grid.RowSpan="2">
                <Button Content="Add" Command="{Binding AddCommand}" >
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="Click">
                            <ei:GoToStateAction StateName="VisualStateEditing"/>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </Button>
            </StackPanel>
        </Grid>
        <Grid x:Name="grid1" Height="0">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition/>
                <RowDefinition/>
                <RowDefinition/>
            </Grid.RowDefinitions>
            <Label Content="Code" />
            <TextBox Text="{Binding NewCounterparty.Code, Mode=TwoWay, NotifyOnValidationError=True, ValidatesOnDataErrors=True}" Grid.Column="1" />
            <Label Content="Name" Grid.Row="1" />
            <TextBox Text="{Binding NewCounterparty.Name, Mode=TwoWay, NotifyOnValidationError=True, ValidatesOnDataErrors=True}" Grid.ColumnSpan="2" Grid.Row="1" Grid.Column="1" />
            <Button Content="Save" Command="{Binding SaveCommand}" HorizontalAlignment="Right" HorizontalContentAlignment="Left" Grid.Column="1" Grid.Row="3" >
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="Click">
                        <ei:GoToStateAction StateName="VisualStateNormal"/>
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </Button>
        </Grid>
    </StackPanel>
</UserControl>
